921. Minimum Add to Make Parentheses Valid
Medium
A parentheses string is valid if and only if:
1. It is the empty string,
2. It can be written as AB (A concatenated with B), where A and B are valid strings, or
3. It can be written as (A), where A is a valid string.
You are given a parentheses string s. In one move, you can insert a parenthesis at any position of the string.

For example, if s = "()))", you can insert an opening parenthesis to be "(()))" or a closing parenthesis to be "())))".
Return the minimum number of moves required to make s valid.

 

Example 1:
Input: s = "())"
Output: 1

Example 2:
Input: s = "((("
Output: 3

class Solution {
public:
    int minAddToMakeValid(string s) {
        int size = 0;
        int open = 0;
        for(int i = 0; i < s.length(); i++){
            if(s[i] == '('){
                size++;
            }
            else if(size > 0){
                size--;
            }
            else{
                open++;
            }
        }
        return open + size;
        
    }
};