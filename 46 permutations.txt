46. Permutations
Medium
Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.

Example 1:

Input: nums = [1,2,3]
Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]
Example 2:

Input: nums = [0,1]
Output: [[0,1],[1,0]]
Example 3:

Input: nums = [1]
Output: [[1]]


class Solution {
private:
    void solve(int i, vector<vector<int>> &ans, vector<int>nums){
        if(i >= nums.size()){
            ans.push_back(nums);
            return;
        }
        for(int j = i; j < nums.size(); j++){
            swap(nums[i],nums[j]);
            solve(i+1,ans,nums);
            swap(nums[i],nums[j]);
        }

    }
public:
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> ans;
        solve(0,ans,nums);
        return ans;
    }
};
