152. Maximum Product Subarray
Medium
Given an integer array nums, find a subarray that has the largest product, and return the product.
The test cases are generated so that the answer will fit in a 32-bit integer.

Example 1:
Input: nums = [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.

Example 2:
Input: nums = [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.

class Solution {
public:
    int maxProduct(vector<int>& nums) {
        int n = nums.size();
        int pdt1 = 1;
        int maxi = nums[0];

        for(int i = 0; i < n; i++){
            pdt1 *= nums[i];
            maxi = max (pdt1, maxi);
            if(pdt1 == 0) pdt1 = 1;
        }
        int pdt2 = 1;
        for(int i = n - 1; i >= 0 ; i--){
            pdt2 *= nums[i];
            maxi = max(maxi, pdt2);
            if(pdt2 == 0) pdt2 = 1;
        }
        return maxi;    
    }
};